version: "3.8"

secrets:
  cookie_secret.secret:
    file: ./docker/secrets/cookie_secret.secret
  github_client_id.secret:
    file: ./docker/secrets/github_client_id.secret
  github_client_secret.secret:
    file: ./docker/secrets/github_client_secret.secret
  auth_secret.secret:
    file: ./docker/secrets/auth_secret.secret
  prowlarr_api_key.secret:
    file: ./docker/secrets/prowlarr_api_key.secret
  radarr_api_key.secret:
    file: ./docker/secrets/radarr_api_key.secret
  sonarr_api_key.secret:
    file: ./docker/secrets/sonarr_api_key.secret
  lidarr_api_key.secret:
    file: ./docker/secrets/lidarr_api_key.secret
  readarr_api_key.secret:
    file: ./docker/secrets/readarr_api_key.secret
  prometheus_password.secret:
    file: ./docker/secrets/prometheus_password.secret
  alertmanager_password.secret:
    file: ./docker/secrets/alertmanager_password.secret

services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/config:/config:ro
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.sharphorizons.tech`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.middlewares=chain-secure@file"

  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:latest
    container_name: oauth2-proxy
    restart: unless-stopped
    ports:
      - "127.0.0.1:4180:4180"
    environment:
      - OAUTH2_PROXY_COOKIE_SECRET=${COOKIE_SECRET}
      - OAUTH2_PROXY_CLIENT_ID=${GITHUB_CLIENT_ID}
      - OAUTH2_PROXY_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - OAUTH2_PROXY_PROVIDER=github
      - OAUTH2_PROXY_EMAIL_DOMAINS=*
      - OAUTH2_PROXY_COOKIE_SECURE=true
      - OAUTH2_PROXY_HTTP_ADDRESS=0.0.0.0:4180
      - OAUTH2_PROXY_REDIRECT_URL=https://auth.sharphorizons.tech/oauth2/callback
      - OAUTH2_PROXY_UPSTREAMS=http://traefik:80
      - OAUTH2_PROXY_PATH_PREFIX=/oauth2
      - OAUTH2_PROXY_SKIP_PROVIDER_BUTTON=true
      - OAUTH2_PROXY_PASS_BASIC_AUTH=false
      - OAUTH2_PROXY_PASS_ACCESS_TOKEN=true
      - OAUTH2_PROXY_SET_AUTHORIZATION_HEADER=true
      - OAUTH2_PROXY_COOKIE_DOMAINS=.sharphorizons.tech
      - OAUTH2_PROXY_WHITELIST_DOMAINS=.sharphorizons.tech
      - OAUTH2_PROXY_COOKIE_NAME=_oauth2_proxy
      - OAUTH2_PROXY_COOKIE_REFRESH=1h
      - OAUTH2_PROXY_COOKIE_EXPIRE=168h
      - OAUTH2_PROXY_SCOPE=read:user,user:email
      - OAUTH2_PROXY_CSRF_PREVENT_OTP=true
      - OAUTH2_PROXY_COOKIE_HTTPONLY=true
      - OAUTH2_PROXY_COOKIE_SAMESITE=lax
      - OAUTH2_PROXY_SKIP_AUTH_ROUTES=^/favicon.ico$|^/robots.txt$|^/oauth2/static/.*$|^/oauth2/sign_in$|^/oauth2/callback$|^/oauth2/start$|^/oauth2/userinfo$|^/ping$
      - OAUTH2_PROXY_SKIP_AUTH_PREFIXES=/favicon.ico,/robots.txt,/oauth2/static/,/oauth2/sign_in,/oauth2/callback,/oauth2/start,/oauth2/userinfo,/ping
      - OAUTH2_PROXY_REVERSE_PROXY=true
      - OAUTH2_PROXY_REAL_CLIENT_IP_HEADER=X-Real-IP
      - OAUTH2_PROXY_PROXY_PREFIX=/oauth2
      - OAUTH2_PROXY_PROVIDER_DISPLAY_NAME=GitHub
      - OAUTH2_PROXY_SSL_UPSTREAM_INSECURE_SKIP_VERIFY=true
      - OAUTH2_PROXY_SSL_INSECURE_SKIP_VERIFY=true
      - OAUTH2_PROXY_SILENCE_PING_LOGGING=true
      - OAUTH2_PROXY_REQUEST_LOGGING=true
      - OAUTH2_PROXY_AUTH_LOGGING=true
      - OAUTH2_PROXY_STANDARD_LOGGING=true
      - OAUTH2_PROXY_SKIP_JWT_BEARER_TOKENS=true
      - OAUTH2_PROXY_SET_XAUTHREQUEST=true
    networks:
      - proxy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:4180/ping",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.oauth2-proxy.rule=Host(`auth.sharphorizons.tech`)"
      - "traefik.http.routers.oauth2-proxy.entrypoints=websecure"
      - "traefik.http.routers.oauth2-proxy.tls=true"
      - "traefik.http.services.oauth2-proxy.loadbalancer.server.port=4180"
      - "traefik.http.middlewares.oauth2-headers.headers.customResponseHeaders.Cache-Control=no-store,no-cache,must-revalidate"
      - "traefik.http.middlewares.oauth2-headers.headers.customRequestHeaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.oauth2-headers.headers.customRequestHeaders.X-Real-IP=${REMOTE_ADDR}"
      - "traefik.http.routers.oauth2-proxy.middlewares=oauth2-headers"
      - "traefik.http.routers.oauth2-proxy.priority=120"
      - "traefik.http.routers.oauth2-proxy.service=oauth2-proxy"

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Australia/Sydney
      - VERSION=docker
    volumes:
      - ./config/plex:/config
      - ./tv:/tv
      - ./movies:/movies
      - ./music:/music
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.plex.rule=Host(`plex.sharphorizons.tech`)"
      - "traefik.http.routers.plex.entrypoints=websecure"
      - "traefik.http.routers.plex.tls=true"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
      - "traefik.http.routers.plex.middlewares=plex-headers@file"

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Australia/Sydney
      - WEBUI_PORT=8080
    volumes:
      - ./config/qbittorrent:/config
      - ./downloads:/downloads
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qbit.rule=Host(`qbit.sharphorizons.tech`)"
      - "traefik.http.routers.qbit.entrypoints=websecure"
      - "traefik.http.routers.qbit.tls=true"
      - "traefik.http.routers.qbit.middlewares=chain-secure@file"
      - "traefik.http.services.qbit.loadbalancer.server.port=8080"

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Australia/Sydney
    volumes:
      - ./config/prowlarr:/config
    networks:
      - proxy
    secrets:
      - prowlarr_api_key.secret
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.sharphorizons.tech`)"
      - "traefik.http.routers.prowlarr.entrypoints=websecure"
      - "traefik.http.routers.prowlarr.tls=true"
      - "traefik.http.routers.prowlarr.middlewares=chain-secure@file"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Australia/Sydney
    volumes:
      - ./config/radarr:/config
      - ./movies:/movies
      - ./downloads:/downloads
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.sharphorizons.tech`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls=true"
      - "traefik.http.routers.radarr.middlewares=chain-secure@file"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Australia/Sydney
    volumes:
      - ./config/sonarr:/config
      - ./tv:/tv
      - ./downloads:/downloads
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.sharphorizons.tech`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.http.routers.sonarr.middlewares=chain-secure@file"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Australia/Sydney
    volumes:
      - ./config/lidarr:/config
      - ./music:/music
      - ./downloads:/downloads
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lidarr.rule=Host(`lidarr.sharphorizons.tech`)"
      - "traefik.http.routers.lidarr.entrypoints=websecure"
      - "traefik.http.routers.lidarr.tls=true"
      - "traefik.http.routers.lidarr.middlewares=chain-secure@file"
      - "traefik.http.services.lidarr.loadbalancer.server.port=8686"

  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Australia/Sydney
    volumes:
      - ./config/readarr:/config
      - ./downloads:/downloads
      - ./books:/books
    networks:
      - proxy
    secrets:
      - readarr_api_key.secret
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.readarr.rule=Host(`readarr.sharphorizons.tech`)"
      - "traefik.http.routers.readarr.entrypoints=websecure"
      - "traefik.http.routers.readarr.tls=true"
      - "traefik.http.routers.readarr.middlewares=chain-secure@file"
      - "traefik.http.services.readarr.loadbalancer.server.port=8787"

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Australia/Sydney
    volumes:
      - ./config/bazarr:/config
      - ./movies:/movies
      - ./tv:/tv
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr.rule=Host(`bazarr.sharphorizons.tech`)"
      - "traefik.http.routers.bazarr.entrypoints=websecure"
      - "traefik.http.routers.bazarr.tls=true"
      - "traefik.http.routers.bazarr.middlewares=chain-secure@file"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus:ro
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=15d"
      - "--web.enable-lifecycle"
    networks:
      - proxy
    secrets:
      - prometheus_password.secret
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.sharphorizons.tech`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.routers.prometheus.middlewares=chain-secure@file"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped
    volumes:
      - ./alertmanager:/etc/alertmanager:ro
      - alertmanager_data:/alertmanager
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
      - "--storage.path=/alertmanager"
    networks:
      - proxy
    secrets:
      - alertmanager_password.secret
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.alertmanager.rule=Host(`alerts.sharphorizons.tech`)"
      - "traefik.http.routers.alertmanager.entrypoints=websecure"
      - "traefik.http.routers.alertmanager.tls=true"
      - "traefik.http.routers.alertmanager.middlewares=chain-secure@file"
      - "traefik.http.services.alertmanager.loadbalancer.server.port=9093"

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node-exporter.rule=Host(`metrics.sharphorizons.tech`)"
      - "traefik.http.routers.node-exporter.entrypoints=websecure"
      - "traefik.http.routers.node-exporter.tls=true"
      - "traefik.http.routers.node-exporter.middlewares=chain-secure@file"
      - "traefik.http.services.node-exporter.loadbalancer.server.port=9100"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cadvisor.rule=Host(`cadvisor.sharphorizons.tech`)"
      - "traefik.http.routers.cadvisor.entrypoints=websecure"
      - "traefik.http.routers.cadvisor.tls=true"
      - "traefik.http.routers.cadvisor.middlewares=chain-secure@file"
      - "traefik.http.services.cadvisor.loadbalancer.server.port=8080"

volumes:
  prometheus_data:
  alertmanager_data:

networks:
  proxy:
    name: proxy
    external: true
