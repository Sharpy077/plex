http:
  middlewares:
    secure-headers:
      headers:
        frameDeny: true
        sslRedirect: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 31536000
        customFrameOptionsValue: "SAMEORIGIN"
        contentTypeNosniff: true
        browserXssFilter: true
        customRequestHeaders:
          X-Forwarded-Proto: "https"
        customResponseHeaders:
          Strict-Transport-Security: "max-age=31536000; includeSubDomains; preload"
          X-Content-Type-Options: "nosniff"
          X-Frame-Options: "SAMEORIGIN"
          X-XSS-Protection: "1; mode=block"
          Referrer-Policy: "no-referrer-when-downgrade"
          Server: ""
          X-Powered-By: ""

    oauth2-auth:
      forwardAuth:
        address: "http://oauth2-proxy:4180/oauth2/auth"
        trustForwardHeader: true
        authResponseHeaders:
          - "X-Auth-Request-Access-Token"
          - "Authorization"
          - "X-Auth-Request-User"
          - "X-Auth-Request-Email"
          - "X-Auth-Request-Preferred-Username"
          - "Referer"
          - "X-Forwarded-Uri"
          - "X-Forwarded-Host"
          - "X-Forwarded-Proto"
          - "X-Forwarded-For"
          - "Cookie"

    oauth2-headers:
      headers:
        customRequestHeaders:
          X-Forwarded-Proto: "https"
          X-Real-IP: "{{ .ClientIP }}"
          X-Forwarded-Host: "{{ .Host }}"
          X-Forwarded-Uri: "{{ .Uri }}"
          X-Forwarded-For: "{{ .ClientIP }}"
        customResponseHeaders:
          Cache-Control: "no-store,no-cache,must-revalidate"
          Pragma: "no-cache"
          X-Frame-Options: "SAMEORIGIN"

    chain-secure:
      chain:
        middlewares:
          - secure-headers
          - oauth2-auth
          - oauth2-headers

  routers:
    oauth2:
      rule: "Host(`auth.sharphorizons.tech`)"
      service: "oauth2"
      entryPoints:
        - websecure
      tls:
        certResolver: letsencrypt
      middlewares:
        - oauth2-headers

  services:
    oauth2:
      loadBalancer:
        servers:
          - url: "http://oauth2-proxy:4180"
        passHostHeader: true
        responseForwarding:
          flushInterval: "100ms"

tls:
  options:
    default:
      minVersion: VersionTLS12
      sniStrict: true
      cipherSuites:
        - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
        - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305