http:
  middlewares:
    trusted-ips:
      headers:
        trustedIPs:
          - "10.10.0.0/16" # All internal VLANs
          - "202.128.124.242/32" # Public IP
        hostsProxyHeaders:
          - "X-Forwarded-Host"
          - "X-Forwarded-Proto"
          - "X-Forwarded-For"
          - "X-Real-IP"
        customRequestHeaders:
          X-Real-IP: "{{ .RemoteAddr }}"
          X-Forwarded-Proto: "https"

    security-headers:
      headers:
        sslRedirect: true
        stsSeconds: 31536000
        stsIncludeSubdomains: true
        stsPreload: true
        forceSTSHeader: true
        frameDeny: true
        contentTypeNosniff: true
        browserXssFilter: true
        referrerPolicy: "strict-origin-when-cross-origin"
        permissionsPolicy: "camera=(), microphone=(), geolocation=()"

    rate-limit:
      rateLimit:
        average: 100
        burst: 50
        period: 1s
        sourceCriterion:
          ipStrategy:
            depth: 1

    compression:
      compress:
        excludedContentTypes:
          - "image/png"
          - "image/jpeg"
          - "image/gif"
          - "image/webp"
          - "image/x-icon"
          - "image/svg+xml"
          - "video/mp4"
          - "video/webm"
          - "audio/mpeg"
          - "audio/ogg"
          - "application/pdf"
          - "application/zip"
          - "application/gzip"
        minResponseBodyBytes: 1024
        contentTypes:
          - "text/html"
          - "text/plain"
          - "text/css"
          - "text/javascript"
          - "application/javascript"
          - "application/json"
          - "application/xml"
          - "application/x-yaml"
          - "application/ld+json"

    ipwhitelist:
      ipWhiteList:
        sourceRange:
          - "10.10.0.0/16" # All internal VLANs
          - "202.128.124.242/32" # Public IP

    chain-secure:
      chain:
        middlewares:
          - trusted-ips
          - security-headers
          - rate-limit

    chain-auth:
      chain:
        middlewares:
          - chain-secure
          - oauth2-auth@docker

  routers:
    web:
      entryPoints:
        - "web"
      middlewares:
        - chain-secure
      service: web
      rule: "PathPrefix(`/`)"

    websecure:
      entryPoints:
        - "websecure"
      middlewares:
        - chain-secure
      service: websecure
      rule: "PathPrefix(`/`)"
      tls:
        certResolver: letsencrypt

    metrics:
      entryPoints:
        - "metrics"
      middlewares:
        - chain-secure
      service: metrics
      rule: "PathPrefix(`/metrics`)"
      tls:
        certResolver: letsencrypt

tls:
  options:
    default:
      minVersion: VersionTLS13
      cipherSuites:
        - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
        - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
